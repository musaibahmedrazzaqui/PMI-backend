generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model driver {
  DriverID      Int        @id @default(autoincrement())
  DriverUserID  Int
  CNIC          String     @db.VarChar(45)
  LicenseNumber String     @db.VarChar(45)
  ride          ride[]
  rideinfo      rideinfo[]
  vehicle       vehicle[]
}

model institute {
  InstituteID   Int    @id @default(autoincrement())
  InstituteName String @db.VarChar(45)
  dateJoined    String @db.VarChar(45)
  numberofUsers Int?
  latitude      Float  @db.Float
  longitude     Float  @db.Float
  user          user[]
}

model level {
  LevelID          Int     @id @default(autoincrement())
  levelName        String? @db.VarChar(45)
  levelDescription String? @db.VarChar(45)
  user             user[]
}

model nearestlandmark {
  NearestLandmarkID Int     @id @default(autoincrement())
  Name              String? @db.VarChar(45)
  Latitude          Float?  @db.Float
  Longitude         Float?  @db.Float
}

model referrals {
  ReferralID                      Int     @id @default(autoincrement())
  FromUserID                      Int?
  ToUserID                        Int?
  Testimonial                     String? @db.VarChar(45)
  user_referrals_FromUserIDTouser user?   @relation("referrals_FromUserIDTouser", fields: [FromUserID], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "referrals_ibfk_1")
  user_referrals_ToUserIDTouser   user?   @relation("referrals_ToUserIDTouser", fields: [ToUserID], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "referrals_ibfk_2")

  @@index([FromUserID], map: "FromUserID")
  @@index([ToUserID], map: "ToUserID")
}

model ride {
  RideID         Int        @id @default(autoincrement())
  DriverID       Int
  numberOfPeople Int
  fareEntered    String     @db.VarChar(45)
  driver         driver     @relation(fields: [DriverID], references: [DriverID], onDelete: NoAction, onUpdate: NoAction, map: "ride_ibfk_1")
  user           user       @relation(fields: [numberOfPeople], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "ride_ibfk_2")
  rideinfo       rideinfo[]

  @@index([DriverID], map: "DriverID")
  @@index([numberOfPeople], map: "RiderUserID")
}

model rideinfo {
  idRideInfo         Int               @id @unique(map: "idRideInfo_UNIQUE") @default(autoincrement())
  RideID             Int
  PassengerID        Int
  DriverID           Int
  StatusID           Int
  passengerLatitude  String            @db.VarChar(45)
  driverLatitude     String            @db.VarChar(45)
  passengerLongitude String            @db.VarChar(45)
  driverLongitude    String            @db.VarChar(45)
  fareDecided        String            @db.VarChar(45)
  ride               ride              @relation(fields: [RideID], references: [RideID], onDelete: NoAction, onUpdate: NoAction, map: "rideinfo_ibfk_1")
  user               user              @relation(fields: [PassengerID], references: [userID], onDelete: NoAction, onUpdate: NoAction, map: "rideinfo_ibfk_2")
  driver             driver            @relation(fields: [DriverID], references: [DriverID], onDelete: NoAction, onUpdate: NoAction, map: "rideinfo_ibfk_3")
  status             status            @relation(fields: [StatusID], references: [statusID], onDelete: NoAction, onUpdate: NoAction, map: "rideinfo_ibfk_4")
  ridenegotiation    ridenegotiation[]

  @@index([DriverID], map: "DriverID")
  @@index([PassengerID], map: "PassengerID")
  @@index([RideID], map: "RideID")
  @@index([StatusID], map: "StatusID")
}

model ridenegotiation {
  ridenegotiationId Int      @id @default(autoincrement())
  driverFare        String   @db.VarChar(45)
  rideinfoID        Int
  userFare          String   @db.VarChar(45)
  finalFare         String   @db.VarChar(45)
  rideinfo          rideinfo @relation(fields: [rideinfoID], references: [idRideInfo], onDelete: NoAction, onUpdate: NoAction, map: "ridenegotiation_ibfk_1")

  @@index([rideinfoID], map: "rideinfoID")
}

model status {
  statusID    Int        @id @default(autoincrement())
  status_Name String     @map("status Name") @db.VarChar(45)
  rideinfo    rideinfo[]
}

model user {
  userID                               Int         @id @default(autoincrement())
  firstName                            String      @db.VarChar(45)
  lastName                             String      @db.VarChar(45)
  instituteID                          Int         @default(1) @db.Int
  levelID                              Int         @default(1) @db.Int
  gender                               String      @db.VarChar(45)
  emailID                              String      @db.VarChar(45)
  password                             String      @db.VarChar(45)
  profileImageUrl                      String?     @db.VarChar(45)
  dateJoined                           String      @db.VarChar(45)
  isEmailVerified                      Int         @default(0) @db.TinyInt
  numOfReferrals                       Int?        @default(0)
  referrals_referrals_FromUserIDTouser referrals[] @relation("referrals_FromUserIDTouser")
  referrals_referrals_ToUserIDTouser   referrals[] @relation("referrals_ToUserIDTouser")
  ride                                 ride[]
  rideinfo                             rideinfo[]
  institute                            institute   @relation(fields: [instituteID], references: [InstituteID], onDelete: NoAction, onUpdate: NoAction, map: "user_ibfk_1")
  level                                level       @relation(fields: [levelID], references: [LevelID], onDelete: NoAction, onUpdate: NoAction, map: "user_ibfk_2")

  @@index([instituteID], map: "instituteID")
  @@index([levelID], map: "levelID")
}

model vehicle {
  vehicleID            Int    @id @default(autoincrement())
  VehicleNumber        String @db.VarChar(45)
  EngineNumber         String @db.VarChar(45)
  RegistrationProvince String @db.VarChar(45)
  OwnerName            String @db.VarChar(45)
  Manufacturer         String @db.VarChar(45)
  Model                String @db.VarChar(45)
  Year                 String @db.VarChar(45)
  EngineCC             String @db.VarChar(45)
  DriverID             Int
  driver               driver @relation(fields: [DriverID], references: [DriverID], onDelete: NoAction, onUpdate: NoAction, map: "vehicle_ibfk_1")

  @@index([DriverID], map: "DriverID")
}
